------------------------------------------------------------------------
Commands
------------------------------------------------------------------------

# list commands
ls -lh   # Permissions and file size
ls -lah  # Permissions and file size on all files
ls -ltrh # Permissions and file size, sorted on access time (newest is last)
ls -ld   # Permissions, only directories

# directory size
du -sh directory # size in MB

# command to get total disk space( free + available )
df -h
df -k

# clean disk space:
sudo apt-get clean
sudo apt-get autoclean
sudo apt-get autoremove
du -sh /var/cache/apt/archives

# How to list recursive file sizes of files and directories in a directory?
du --all --human-readable --apparent-size

# zip commands:
zip -r --exclude=*.git* --exclude=*.gitignore* --exclude=*lib* --exclude=*app/Config/database.php* --exclude=*.DS_Store* jobs_in.zip jobs_in

# System Information
sudo apt-get install landscape-common
landscape-sysinfo

# server timezone
date +%Z

# finding a file
locate my.cnf

# remove hostname from knownhosts
ssh-keygen -R hostname


# change root directory after login and add the following
vi ~/.bashrc
========
# default login location to apps
cd /home/apps

# make apps/bin executable directory
export PATH=$PATH:/home/apps/bin/
========

------------------------------------------------------------------------
Create .ssh dir and authorized keys file [Ubuntu]
------------------------------------------------------------------------
# You have to create the .ssh directory and the authorized_keys file the first time.

# Create the .ssh directory:
$ mkdir ~/.ssh

#Set the right permissions:
$ chmod 700 ~/.ssh

# Create the authorized_keys file:
touch ~/.ssh/authorized_keys

# Set the right permissions:
chmod 600 ~/.ssh/authorized_keys

#The permissions are important! It won't work without the right permissions!
# Now you can add the public key to the authorized_keys file:
$ cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
------------------------------------------------------------------------
Build custom command
------------------------------------------------------------------------
create a new command : Ubuntu
1) Make a bin directory in their home directory:
mkdir ~/bin
2) put your custom scripts in there:
mv command-script ~/bin
3) Add this to the bottom of your ~/.bashrc
export PATH=$PATH:~/bin
4) log back in and out of your terminal
bash --login

e.g:
mkdir ~/bin
sudo vi ~/bin/console
  cd /home/apps/vdate/current && bundle exec rails c production
sudo chmod +x ~/bin/console
sudo vi ~/.bashrc
  export PATH=$PATH:~/bin

sudo vi ~/bin/vdate
cd /home/apps/vdate/current